DIGIT -> { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }        (digits)

DIGITS -> DIGIT                                  (digits end)
DIGITS -> DIGIT DIGITS                           (digits cons)
NUMBER -> DIGITS                                 (natural number)

LETTER -> { a, b, c, d, e, f, g, h, i, j }       (alphabet)
LETTER -> { k, l, m, n, o, p, q, r, s, t }       (alphabet)
LETTER -> { u, v, w, x, y, z, A, B, C, D }       (alphabet)
LETTER -> { E, F, G, H, I, J, K, L, M, N }       (alphabet)
LETTER -> { O, P, Q, R, S, T, U, V, W, X }       (alphabet)
LETTER -> { Y, Z }                               (alphabet)

LETTERS -> LETTER                                (letter end)
LETTERS -> LETTER LETTERS                        (letter cons)

LPAR -> (                                        (left par symbol)
RPAR -> )                                        (right par symbol)
COMMA -> ,                                       (comma symbol)
IMPLIES -> ->                                    (implies symbol)
DOT -> .                                         (dot symbol)
VEE -> v                                         (vee symbol)
IN -> :                                          (in symbol)

TOKEN -> LETTERS                                 (token)

ARGS -> TOKEN                                    (argument end)
ARGS -> TOKEN [COMMA] ARGS                       (arguments cons)
RELATION -> TOKEN [LPAR] ARGS [RPAR]             (relation)
RELATION -> NOT RELATION                         (negation)
CONJ -> RELATION                                 (conjunction end)
CONJ -> RELATION [COMMA] CONJ                    (conjunction cons)
CLAUSE -> CONJ [IMPLIES] CONJ                    (clause)
DISJUNCTION -> RELATION [VEE] RELATION           (disjunction end)
DISJUNCTION -> RELATION [VEE] DISJUNCTION        (disjunction cons) 

ALGO -> CLAUSE                                   (clause statement)
ALGO -> DISJUNCTION                              (disjunction statement)
ALGO -> DECLARATION                              (declaration)
ALGO -> DIRECTIVE                                (directive)

VAR -> var                                       (var keyword)
TYPE -> [LPAR] ARGS [RPAR] [IMPLIES] TOKEN       (function type)

FUNCTION -> [LET] TOKEN [IN] TYPE                (function)
CONSTANT -> ARGS [IN] TOKEN                      (constant)
VARIABLE -> [VAR] ARGS [IN] TOKEN                (variable)

DECLARATION -> FUNCTION                          (function declaration)
DECLARATION -> CONSTANT                          (constant declaration)
DECLARATION -> VARIABLE                          (variable declaration)
DECLARATION -> ORDER                             (total order declaration)

STATEMENT -> ALGO [DOT]                          (statement)

PROGRAM -> STATEMENT                             (program end)
PROGRAM -> STATEMENT PROGRAM                     (program cons)

DIRECTIVE -> COUNT                               (model count directive)
DIRECTIVE -> FILTER                              (included predicates directive)

